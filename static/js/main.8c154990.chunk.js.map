{"version":3,"sources":["types/SortSelectors.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["SortSelectors","TodoList","todos","selectTodo","onUserClick","selectButtonState","classNames","className","map","todo","id","title","completed","titleColor","type","onClick","TodoFilter","query","onSelectChange","onInputChange","onDelete","onChange","value","all","active","placeholder","length","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onClose","useState","user","setUser","userId","useEffect","getUser","recivedUser","href","email","name","App","setQuery","select","setSelect","visibleTodos","setVisibleTodos","allTodos","setAllTodos","setSelectTodo","result","filter","queryFilter","toUpperCase","includes","trim","event","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c154990.chunk.js","sourcesContent":["export enum SortSelectors {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectTodo: Todo | null,\n  onUserClick: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  onUserClick,\n}) => {\n  const selectButtonState = classNames(\n    'far',\n    { 'fa-eye': !selectTodo },\n    { 'fa-eye-slash': selectTodo },\n  );\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const {\n            id,\n            title,\n            completed,\n          } = todo;\n\n          const titleColor = classNames({\n            'has-text-success': completed,\n            'has-text-danger': !completed,\n          });\n\n          const getTodo = () => {\n            onUserClick(todo);\n          };\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className=\"\"\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p className={titleColor}>{title}</p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={getTodo}\n                >\n                  <span className=\"icon\">\n                    <i className={selectButtonState} />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\nimport { SortSelectors } from '../../types/SortSelectors';\n\ntype Props = {\n  query: string,\n  onSelectChange: (event: React.ChangeEvent<HTMLSelectElement>) => void,\n  onInputChange: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  onDelete: () => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onSelectChange,\n  onInputChange,\n  onDelete,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={onSelectChange}\n          >\n            <option value={SortSelectors.all}>All</option>\n            <option value={SortSelectors.active}>Active</option>\n            <option value={SortSelectors.completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={onInputChange}\n        />\n\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {!query.length || (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={onDelete}\n              aria-label=\"clear query\"\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\n\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo\n  onClose: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose }) => {\n  const [user, setUser] = useState<User>();\n\n  const {\n    id,\n    title,\n    userId,\n    completed,\n  } = todo;\n\n  useEffect(() => {\n    getUser(userId).then(recivedUser => setUser(recivedUser));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n              aria-label=\"close user info\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { SortSelectors } from './types/SortSelectors';\n\nexport const App: React.FC = () => {\n  const [query, setQuery] = useState('');\n  const [\n    select,\n    setSelect,\n  ] = useState<SortSelectors | string>(SortSelectors.all);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [allTodos, setAllTodos] = useState<Todo[]>([]);\n  const [selectTodo, setSelectTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos().then(result => setAllTodos(result));\n\n    setVisibleTodos(allTodos.filter(todo => {\n      const queryFilter = todo.title\n        .toUpperCase()\n        .includes(query.toUpperCase().trim());\n\n      switch (select) {\n        case (SortSelectors.all):\n          return queryFilter;\n\n        case (SortSelectors.active):\n          return queryFilter\n            && !todo.completed;\n\n        case (SortSelectors.completed):\n          return queryFilter\n            && todo.completed;\n\n        default:\n          return false;\n      }\n    }));\n  }, [query, select, allTodos]);\n\n  const onQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const onSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelect(event.target.value);\n  };\n\n  const onButtonClick = () => {\n    setQuery('');\n  };\n\n  const gettingTodo = (todo: Todo) => {\n    setSelectTodo(todo);\n  };\n\n  const onModalClose = () => {\n    setSelectTodo(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onSelectChange={onSelectChange}\n                onInputChange={onQueryChange}\n                onDelete={onButtonClick}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!allTodos.length && <Loader />}\n              {visibleTodos.length && (\n                <TodoList\n                  todos={visibleTodos}\n                  selectTodo={selectTodo}\n                  onUserClick={gettingTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectTodo && (\n        <TodoModal\n          todo={selectTodo}\n          onClose={onModalClose}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}